<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="keyboard_8cpp" kind="file" language="C++">
    <compoundname>keyboard.cpp</compoundname>
    <includes refid="keyboard_8hpp" local="yes">keyboard.hpp</includes>
    <includes refid="keys_8hpp" local="yes">keys.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>keyboard/keyboard.cpp</label>
        <link refid="keyboard_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>keyboard.hpp</label>
        <link refid="keyboard_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>keys.hpp</label>
        <link refid="keys_8hpp"/>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="4">
        <label>Wire.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="keyboard_8cpp_1a2a029d9e4eafd59d948bd67f92a59b14" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rows[]</definition>
        <argsstring>[]</argsstring>
        <name>rows</name>
        <initializer>= {1, 4, 5, 11, 13}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="12" column="9" bodyfile="keyboard/keyboard.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a35c25de519ed94d77e7eb11f81f67617" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t cols[]</definition>
        <argsstring>[]</argsstring>
        <name>cols</name>
        <initializer>= {0, 3, 19, 12, 18, 6, 7}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="13" column="9" bodyfile="keyboard/keyboard.cpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1aab6176cd711d76536a8991e386494f93" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lastValue[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>lastValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="15" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1acb1fd8495924c24365e8cdf98f7915c8" prot="public" static="no" mutable="no">
        <type>KeyState</type>
        <definition>KeyState keyStates[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>keyStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="16" column="10" bodyfile="keyboard/keyboard.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a44805a7db7e8dfc8c550872d8eda9054" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char defaultKeymap[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>defaultKeymap</name>
        <initializer>= {                                                                                  
    {LATIN_SMALL_LETTER_Q, LATIN_SMALL_LETTER_W, NULL, LATIN_SMALL_LETTER_A, NULL, NULL, NULL},                                          
    {LATIN_SMALL_LETTER_E, LATIN_SMALL_LETTER_S, LATIN_SMALL_LETTER_D, LATIN_SMALL_LETTER_P, LATIN_SMALL_LETTER_X, LATIN_SMALL_LETTER_Z, NULL},                     
    {LATIN_SMALL_LETTER_R, LATIN_SMALL_LETTER_G, LATIN_SMALL_LETTER_T, NULL, LATIN_SMALL_LETTER_V, LATIN_SMALL_LETTER_C, LATIN_SMALL_LETTER_F},                     
    {LATIN_SMALL_LETTER_U, LATIN_SMALL_LETTER_H, LATIN_SMALL_LETTER_Y, NULL, LATIN_SMALL_LETTER_B, LATIN_SMALL_LETTER_N, LATIN_SMALL_LETTER_J},                     
    {LATIN_SMALL_LETTER_O, LATIN_SMALL_LETTER_L, LATIN_SMALL_LETTER_I, NULL, DOLLAR_SIGN, LATIN_SMALL_LETTER_M, LATIN_SMALL_LETTER_K}                  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="24" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="24" bodyend="30"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a60138d65e0ec0c86348dbb4098b3673a" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap1[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap1</name>
        <initializer>= {                                                                                  
    {NUMBER_SIGN, DIGIT_ONE, NULL, ASTERISK, NULL, NULL, DIGIT_ZERO},                                          
    {DIGIT_TWO, DIGIT_FOUR, DIGIT_FIVE, COMMERCIAL_AT, DIGIT_EIGHT, DIGIT_SEVEN, NULL},                                             
    {DIGIT_THREE, SOLIDUS, LEFT_PARENTHESIS, NULL, QUESTION_MARK, DIGIT_NINE, DIGIT_SIX},                        
    {LOW_LINE, COLON, RIGHT_PARENTHESIS, NULL, EXCLAMATION_MARK, COMMA, SEMICOLON},   
    {PLUS_SIGN, QUOTATION_MARK, HYPHEN_MINUS, NULL, CENT_SIGN, FULL_STOP, APOSTROPHE} 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="37" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a5c9157ed3f1c42bb8af1bca76bd5fc7a" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap2[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap2</name>
        <initializer>= {
    {GRAVE_ACCENT, PERCENT_SIGN, NULL, FEMININE_ORDINAL_INDICATOR, NULL, NULL, NO_BREAK_SPACE},
    {AMPERSAND, MASCULINE_ORDINAL_INDICATOR, REVERSED_NOT_SIGN, EQUALS_SIGN, INFINITY, MICRO_SIGN, NULL},
    {POUND_SIGN, REVERSE_SOLIDUS, LEFT_CURLY_BRACKET, NULL, INVERTED_QUESTION_MARK, SUPERSCRIPT_TWO, NOT_SIGN},
    {CIRCUMFLEX_ACCENT, VULGAR_FRACTION_ONE_HALF, RIGHT_CURLY_BRACKET, NULL, INVERTED_EXCLAMATION_MARK, INTERSECTION, VULGAR_FRACTION_ONE_QUARTER},
    {GREATER_THAN_SIGN, RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK, LESS_THAN_SIGN, NULL, PESETA_SIGN, TILDE, LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="50" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1ab5e790229b17f55d22ff79ea7748305b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap3[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap3</name>
        <initializer>= {
    {TOP_HALF_INTEGRAL, BOTTOM_HALF_INTEGRAL, NULL, ALMOST_EQUAL_TO, NULL, NULL, NULL},
    {DIVISION_SIGN, DEGREE_SIGN, BULLET_OPERATOR, IDENTICAL_TO, NULL, NULL, NULL},
    {YEN_SIGN, SQUARE_ROOT, LEFT_SQUARE_BRACKET, NULL, NULL, SUPERSCRIPT_LATIN_SMALL_LETTER_N, MIDDLE_DOT},
    {PLUS_MINUS_SIGN, REVERSE_SOLIDUS, RIGHT_SQUARE_BRACKET, NULL, NULL, NULL, LATIN_SMALL_LETTER_F_WITH_HOOK},
    {GREATER_THAN_OR_EQUAL_TO, NULL, LESS_THAN_OR_EQUAL_TO, NULL, NULL, NULL, NULL}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="63" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1ae5b05a806cec46a770fcb6bd6e964eea" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap4[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap4</name>
        <initializer>= {
    {LATIN_SMALL_LETTER_A_WITH_CIRCUMFLEX, LATIN_SMALL_LETTER_A_WITH_DIAERESIS, NULL, LATIN_CAPITAL_LETTER_C_WITH_CEDILLA, NULL, NULL, NULL},
    {LATIN_SMALL_LETTER_A_WITH_GRAVE, LATIN_SMALL_LETTER_SHARP_S, LATIN_SMALL_LETTER_E_WITH_ACUTE, LATIN_SMALL_LETTER_C_WITH_CEDILLA, LATIN_SMALL_LETTER_I_WITH_ACUTE, LATIN_SMALL_LETTER_I_WITH_GRAVE, NULL},
    {LATIN_SMALL_LETTER_A_WITH_RING_ABOVE, LATIN_SMALL_LETTER_E_WITH_DIAERESIS, LATIN_SMALL_LETTER_A_WITH_ACUTE, NULL, LATIN_CAPITAL_LETTER_N_WITH_TILDE, LATIN_SMALL_LETTER_N_WITH_TILDE, LATIN_SMALL_LETTER_E_WITH_CIRCUMFLEX},
    {LATIN_CAPITAL_LETTER_A_WITH_RING_ABOVE, LATIN_SMALL_LETTER_E_WITH_GRAVE, LATIN_CAPITAL_LETTER_A_WITH_DIAERESIS, NULL, LATIN_SMALL_LETTER_O_WITH_CIRCUMFLEX, LATIN_SMALL_LETTER_O_WITH_DIAERESIS, LATIN_CAPITAL_LETTER_E_WITH_ACUTE},
    {LATIN_CAPITAL_LIGATURE_AE, LATIN_SMALL_LETTER_I_WITH_CIRCUMFLEX, LATIN_SMALL_LIGATURE_AE, NULL, NULL, LATIN_SMALL_LETTER_O_WITH_GRAVE, LATIN_SMALL_LETTER_I_WITH_DIAERESIS}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="76" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a417f088a77a380a3aba90ac8e6cc6e3b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap5[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap5</name>
        <initializer>= {
    {LATIN_CAPITAL_LETTER_O_WITH_DIAERESIS, LATIN_SMALL_LETTER_O_WITH_ACUTE, NULL, GREEK_SMALL_LETTER_PI, NULL, NULL, NULL},
    {LATIN_SMALL_LETTER_U_WITH_DIAERESIS, GREEK_CAPITAL_LETTER_SIGMA, GREEK_SMALL_LETTER_SIGMA, GREEK_CAPITAL_LETTER_GAMMA, NULL, GREEK_SMALL_LETTER_EPSILON, NULL},
    {LATIN_SMALL_LETTER_U_WITH_CIRCUMFLEX, GREEK_CAPITAL_LETTER_PHI, LATIN_SMALL_LETTER_U_WITH_GRAVE, NULL, NULL, NULL, GREEK_SMALL_LETTER_TAU},
    {LATIN_SMALL_LETTER_U_WITH_ACUTE, GREEK_CAPITAL_LETTER_THETA, LATIN_CAPITAL_LETTER_U_WITH_DIAERESIS, NULL, NULL, NULL, GREEK_CAPITAL_LETTER_OMEGA},
    {GREEK_SMALL_LETTER_ALPHA, GREEK_SMALL_LETTER_PHI, LATIN_SMALL_LETTER_Y_WITH_DIAERESIS, NULL, NULL, NULL, GREEK_SMALL_LETTER_DELTA}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="89" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a4724c6129088deb361ebe36ad59b7e75" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap6[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap6</name>
        <initializer>= {
    {BOX_DRAWINGS_LIGHT_VERTICAL, BOX_DRAWINGS_LIGHT_VERTICAL_AND_LEFT, NULL, BOX_DRAWINGS_UP_SINGLE_AND_HORIZONTAL_DOUBLE, NULL, NULL, NULL},
    {BOX_DRAWINGS_VERTICAL_SINGLE_AND_LEFT_DOUBLE, BOX_DRAWINGS_UP_SINGLE_AND_HORIZONTAL_DOUBLE, BOX_DRAWINGS_LIGHT_DOWN_AND_LEFT, BOX_DRAWINGS_DOUBLE_UP_AND_LEFT, BOX_DRAWINGS_VERTICAL_DOUBLE_AND_RIGHT_SINGLE, BOX_DRAWINGS_VERTICAL_SINGLE_AND_RIGHT_DOUBLE, NULL},
    {BOX_DRAWINGS_VERTICAL_DOUBLE_AND_LEFT_SINGLE, BOX_DRAWINGS_LIGHT_UP_AND_HORIZONTAL, BOX_DRAWINGS_DOWN_DOUBLE_AND_LEFT_SINGLE, NULL, BOX_DRAWINGS_DOUBLE_DOWN_AND_RIGHT, BOX_DRAWINGS_DOUBLE_UP_AND_RIGHT, BOX_DRAWINGS_LIGHT_UP_AND_RIGHT},
    {BOX_DRAWINGS_DOUBLE_VERTICAL_AND_LEFT, BOX_DRAWINGS_LIGHT_DOWN_AND_HORIZONTAL, BOX_DRAWINGS_DOWN_SINGLE_AND_LEFT_DOUBLE, NULL, BOX_DRAWINGS_DOUBLE_UP_AND_HORIZONTAL, BOX_DRAWINGS_DOUBLE_DOWN_AND_HORIZONTAL, BOX_DRAWINGS_LIGHT_VERTICAL_AND_RIGHT},
    {BOX_DRAWINGS_DOUBLE_DOWN_AND_LEFT, BOX_DRAWINGS_LIGHT_VERTICAL_AND_HORIZONTAL, BOX_DRAWINGS_DOUBLE_VERTICAL, NULL, BOX_DRAWINGS_DOUBLE_HORIZONTAL, BOX_DRAWINGS_DOUBLE_VERTICAL_AND_HORIZONTAL, BOX_DRAWINGS_LIGHT_HORIZONTAL}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="102" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a78f8a016ea428f6d25243ab2c936bd23" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap7[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap7</name>
        <initializer>= {
    {BOX_DRAWINGS_DOUBLE_VERTICAL_AND_HORIZONTAL, BOX_DRAWINGS_DOUBLE_VERTICAL_AND_HORIZONTAL, NULL, BOX_DRAWINGS_VERTICAL_SINGLE_AND_HORIZONTAL_DOUBLE, NULL, NULL, NULL},
    {BOX_DRAWINGS_UP_DOUBLE_AND_HORIZONTAL_SINGLE, BOX_DRAWINGS_LIGHT_UP_AND_LEFT, BOX_DRAWINGS_LIGHT_DOWN_AND_RIGHT, BOX_DRAWINGS_VERTICAL_DOUBLE_AND_HORIZONTAL_SINGLE, LIGHT_SHADE, MEDIUM_SHADE, NULL},
    {BOX_DRAWINGS_DOWN_SINGLE_AND_HORIZONTAL_DOUBLE, LOWER_HALF_BLOCK, BOX_DRAWINGS_DOWN_DOUBLE_AND_HORIZONTAL_SINGLE, NUL_CHAR, NULL, DARK_SHADE, FULL_BLOCK},
    {BOX_DRAWINGS_UP_SINGLE_AND_RIGHT_DOUBLE, LEFT_HALF_BLOCK, BOX_DRAWINGS_UP_DOUBLE_AND_RIGHT_SINGLE, NULL, START_OF_HEADING, START_OF_TEXT, RIGHT_HALF_BLOCK},
    {BOX_DRAWINGS_DOWN_DOUBLE_AND_RIGHT_SINGLE, BLACK_SQUARE, BOX_DRAWINGS_DOWN_SINGLE_AND_RIGHT_DOUBLE, NULL, END_OF_TRANSMISSION, END_OF_TEXT, UPPER_HALF_BLOCK}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="116" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="116" bodyend="122"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1ad1f70526e32d1d399fefec95ecadd7f4" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char symbolKeymap8[ROW_COUNT][COL_COUNT]</definition>
        <argsstring>[ROW_COUNT][COL_COUNT]</argsstring>
        <name>symbolKeymap8</name>
        <initializer>= {
    {ENQUIRY, ACKNOWLEDGE, NULL, SHIFT_IN, NULL, NULL, NULL},
    {BELL, DATA_LINK_ESCAPE, DEVICE_CONTROL_ONE, SHIFT_OUT, END_OF_MEDIUM, CANCEL, NULL},
    {BACKSPACE, DEVICE_CONTROL_THREE, HORIZONTAL_TABULATION, NULL, ESCAPE, SUBSTITUTE, DEVICE_CONTROL_TWO},
    {VERTICAL_TABULATION, DEVICE_CONTROL_FOUR, LINE_FEED, NULL, FILE_SEPARATOR, GROUP_SEPARATOR, NEGATIVE_ACKNOWLEDGE},
    {CARRIAGE_RETURN, END_OF_TRANSMISSION_BLOCK, FORM_FEED, NULL, UNIT_SEPARATOR, RECORD_SEPARATOR, SYNCHRONOUS_IDLE}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="130" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a115635b66231a02e918697f104ec4083" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool altLock</definition>
        <argsstring></argsstring>
        <name>altLock</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="138" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a6e5da0e9797a7fe99ba26a72a522eeb7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ctrlLock</definition>
        <argsstring></argsstring>
        <name>ctrlLock</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="139" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a8f0007fdb70fed90488fac8be572f5f8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool capsLock</definition>
        <argsstring></argsstring>
        <name>capsLock</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="140" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a445daf51e65da10949746414714986cf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool symbolLock</definition>
        <argsstring></argsstring>
        <name>symbolLock</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="141" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a57e3529790c6021957f6e49b2bcaa894" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool backlightState</definition>
        <argsstring></argsstring>
        <name>backlightState</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="142" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a8ea944aafa397d31ec524e3bab790823" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sendDataFlag</definition>
        <argsstring></argsstring>
        <name>sendDataFlag</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="143" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a921d3b38d2a35c481efb872df0115fe6" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t keymapIndex</definition>
        <argsstring></argsstring>
        <name>keymapIndex</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="144" column="9" bodyfile="keyboard/keyboard.cpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1aa47f94e1a3b97eb02d2e3cc3e49cec73" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t keyInfo[KEY_INFO_SIZE]</definition>
        <argsstring>[KEY_INFO_SIZE]</argsstring>
        <name>keyInfo</name>
        <initializer>= {0x00, false, false, false, false, false, false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="145" column="9" bodyfile="keyboard/keyboard.cpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1aac517e421a5e13e00972fde1bf6e3373" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t sendData[KEY_INFO_SIZE]</definition>
        <argsstring>[KEY_INFO_SIZE]</argsstring>
        <name>sendData</name>
        <initializer>= {0x00, false, false, false, false, false, false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="146" column="9" bodyfile="keyboard/keyboard.cpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1ad99d3b9e3851951ccd032a5a81726c16" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t emptyData[KEY_INFO_SIZE]</definition>
        <argsstring>[KEY_INFO_SIZE]</argsstring>
        <name>emptyData</name>
        <initializer>= {0x00, false, false, false, false, false, false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="147" column="9" bodyfile="keyboard/keyboard.cpp" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a38e18697772ce4b5e924e000280f715a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t currentBrightness</definition>
        <argsstring></argsstring>
        <name>currentBrightness</name>
        <initializer>= 119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="148" column="9" bodyfile="keyboard/keyboard.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8cpp_1a7c050410c46be8823af1cf7dad8c64ab" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long keyRepeatStart</definition>
        <argsstring></argsstring>
        <name>keyRepeatStart</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="149" column="15" bodyfile="keyboard/keyboard.cpp" bodystart="149" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="keyboard_8cpp_1ac6532b6359ec1083f0936a3a1c93bdce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void onRequest</definition>
        <argsstring>()</argsstring>
        <name>onRequest</name>
        <briefdescription>
<para>Handles I2C requests. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends the key data over I2C when requested. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="156" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="156" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a82ceff7c692732aa22e2944ae4a9216c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setKeyboardBrightness</definition>
        <argsstring>(uint8_t command)</argsstring>
        <name>setKeyboardBrightness</name>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Sets the keyboard backlight brightness. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The command to set the brightness (toggle, up, down). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="177" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="177" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1ae2b10ad8b6dbe01e8edca43084500831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keyReleased</definition>
        <argsstring>(int rowIndex, int colIndex)</argsstring>
        <name>keyReleased</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <briefdescription>
<para>Checks if a key was released. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the key was released, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="219" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keyHeld</definition>
        <argsstring>(int rowIndex, int colIndex)</argsstring>
        <name>keyHeld</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <briefdescription>
<para>Checks if a key is being held. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the key is being held, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="231" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keyPressed</definition>
        <argsstring>(int rowIndex, int colIndex)</argsstring>
        <name>keyPressed</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <briefdescription>
<para>Checks if a key was pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the key was pressed, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="243" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1af600fe8ddb2bcbd96d274431dc7169bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keyNotPressed</definition>
        <argsstring>(int rowIndex, int colIndex)</argsstring>
        <name>keyNotPressed</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <briefdescription>
<para>Checks if a key is not pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the key is not pressed, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="255" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool doesKeyExistInKeymap</definition>
        <argsstring>(int rowIndex, int colIndex, char keymap[ROW_COUNT][COL_COUNT])</argsstring>
        <name>doesKeyExistInKeymap</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <param>
          <type>char</type>
          <declname>keymap</declname>
          <array>[ROW_COUNT][COL_COUNT]</array>
        </param>
        <briefdescription>
<para>Checks if a key exists in the keymap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keymap</parametername>
</parameternamelist>
<parameterdescription>
<para>The keymap to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the key exists in the keymap, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="268" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1af260c2546cadcab2563494c1c0e06d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printKeyInfo</definition>
        <argsstring>(uint8_t data[KEY_INFO_SIZE])</argsstring>
        <name>printKeyInfo</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
          <array>[KEY_INFO_SIZE]</array>
        </param>
        <briefdescription>
<para>Prints the key information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The key data array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="278" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="278" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void autoResetKeymapIndex</definition>
        <argsstring>()</argsstring>
        <name>autoResetKeymapIndex</name>
        <briefdescription>
<para>Handles resetting the keymap index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="301" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="301" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a50804879e835f6e82e0f290a1f879ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setDefaultCharacter</definition>
        <argsstring>(int rowIndex, int colIndex)</argsstring>
        <name>setDefaultCharacter</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <briefdescription>
<para>Sets the default character for a key. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets keyInfo to the correct character for a specific key, from the default keymap only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="314" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="314" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a993522780f497efb09529ca580b213fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setSymbolCharacter</definition>
        <argsstring>(int rowIndex, int colIndex)</argsstring>
        <name>setSymbolCharacter</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <briefdescription>
<para>Sets the symbol character for a key. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets keyInfo to the correct character for a specific key, from the symbol keymaps only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="342" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="342" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a2be7a2b4a13911ecc5ccf8bc7f69ff63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handleCharacter</definition>
        <argsstring>(int rowIndex, int colIndex)</argsstring>
        <name>handleCharacter</name>
        <param>
          <type>int</type>
          <declname>rowIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colIndex</declname>
        </param>
        <briefdescription>
<para>Handles the character for a specific key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index of the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="402" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="402" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1a0e5199e98a5286602c42aea9fb99ee65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void readKeyMatrix</definition>
        <argsstring>()</argsstring>
        <name>readKeyMatrix</name>
        <briefdescription>
<para>Reads the key matrix and updates the key states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="421" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="421" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8cpp_1ad932a802466e392e983bf2c9ca796f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendKeyInfo</definition>
        <argsstring>()</argsstring>
        <name>sendKeyInfo</name>
        <briefdescription>
<para>Sends the key information over I2C. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="keyboard/keyboard.cpp" line="469" column="6" bodyfile="keyboard/keyboard.cpp" bodystart="469" bodyend="648"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of keyboard functions and keymaps. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>hreikin (<ulink url="mailto:hreikin@gmail.com">hreikin@gmail.com</ulink>) @license MIT </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2025 hreikin (<ulink url="mailto:hreikin@gmail.com">hreikin@gmail.com</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2025-03-07 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard_8hpp" kindref="compound">keyboard.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keys_8hpp" kindref="compound">keys.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">uint8_t<sp/>rows[]<sp/>=<sp/>{1,<sp/>4,<sp/>5,<sp/>11,<sp/>13};</highlight></codeline>
<codeline lineno="13"><highlight class="normal">uint8_t<sp/>cols[]<sp/>=<sp/>{0,<sp/>3,<sp/>19,<sp/>12,<sp/>18,<sp/>6,<sp/>7};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lastValue[ROW_COUNT][COL_COUNT];</highlight></codeline>
<codeline lineno="16"><highlight class="normal">KeyState<sp/>keyStates[ROW_COUNT][COL_COUNT];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keys<sp/>wrapped<sp/>in<sp/>square<sp/>brackets<sp/>require<sp/>special<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>default<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>q,<sp/>w,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>[alt],<sp/>[space],<sp/><sp/><sp/><sp/>[mic]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>e,<sp/>s,<sp/><sp/><sp/><sp/><sp/>d,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/><sp/><sp/><sp/><sp/>x,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>z,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>r,<sp/>g,<sp/><sp/><sp/><sp/><sp/>t,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/><sp/><sp/>v,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>c,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>u,<sp/>h,<sp/><sp/><sp/><sp/><sp/>y,<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/><sp/><sp/>b,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>o,<sp/>l,<sp/><sp/><sp/><sp/><sp/>i,<sp/>[backspace],<sp/><sp/><sp/>[$],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>m,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>defaultKeymap[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_Q,<sp/>LATIN_SMALL_LETTER_W,<sp/>NULL,<sp/>LATIN_SMALL_LETTER_A,<sp/>NULL,<sp/>NULL,<sp/>NULL},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_E,<sp/>LATIN_SMALL_LETTER_S,<sp/>LATIN_SMALL_LETTER_D,<sp/>LATIN_SMALL_LETTER_P,<sp/>LATIN_SMALL_LETTER_X,<sp/>LATIN_SMALL_LETTER_Z,<sp/>NULL},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_R,<sp/>LATIN_SMALL_LETTER_G,<sp/>LATIN_SMALL_LETTER_T,<sp/>NULL,<sp/>LATIN_SMALL_LETTER_V,<sp/>LATIN_SMALL_LETTER_C,<sp/>LATIN_SMALL_LETTER_F},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_U,<sp/>LATIN_SMALL_LETTER_H,<sp/>LATIN_SMALL_LETTER_Y,<sp/>NULL,<sp/>LATIN_SMALL_LETTER_B,<sp/>LATIN_SMALL_LETTER_N,<sp/>LATIN_SMALL_LETTER_J},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_O,<sp/>LATIN_SMALL_LETTER_L,<sp/>LATIN_SMALL_LETTER_I,<sp/>NULL,<sp/>DOLLAR_SIGN,<sp/>LATIN_SMALL_LETTER_M,<sp/>LATIN_SMALL_LETTER_K}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>1<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>#,<sp/>1,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*,<sp/>[alt],<sp/>[space],<sp/><sp/><sp/><sp/><sp/><sp/>[0]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>2,<sp/>4,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>3,<sp/>/,<sp/><sp/><sp/><sp/><sp/>(,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/><sp/><sp/>?,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>_,<sp/>:,<sp/><sp/><sp/><sp/><sp/>),<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/><sp/><sp/>!,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>+,<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/>-,<sp/>[backspace],<sp/><sp/><sp/>[¢],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap1[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{NUMBER_SIGN,<sp/>DIGIT_ONE,<sp/>NULL,<sp/>ASTERISK,<sp/>NULL,<sp/>NULL,<sp/>DIGIT_ZERO},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{DIGIT_TWO,<sp/>DIGIT_FOUR,<sp/>DIGIT_FIVE,<sp/>COMMERCIAL_AT,<sp/>DIGIT_EIGHT,<sp/>DIGIT_SEVEN,<sp/>NULL},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{DIGIT_THREE,<sp/>SOLIDUS,<sp/>LEFT_PARENTHESIS,<sp/>NULL,<sp/>QUESTION_MARK,<sp/>DIGIT_NINE,<sp/>DIGIT_SIX},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{LOW_LINE,<sp/>COLON,<sp/>RIGHT_PARENTHESIS,<sp/>NULL,<sp/>EXCLAMATION_MARK,<sp/>COMMA,<sp/>SEMICOLON},<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{PLUS_SIGN,<sp/>QUOTATION_MARK,<sp/>HYPHEN_MINUS,<sp/>NULL,<sp/>CENT_SIGN,<sp/>FULL_STOP,<sp/>APOSTROPHE}<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>2<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>`,<sp/>%,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ª,<sp/>[alt],<sp/>[space],<sp/><sp/><sp/>[NBSP]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>&amp;,<sp/>º,<sp/><sp/><sp/><sp/><sp/>⌐,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=,<sp/><sp/><sp/><sp/><sp/>∞,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>µ,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>£,<sp/>\,<sp/><sp/><sp/><sp/><sp/>{,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/><sp/><sp/>¿,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>²,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>¬<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>^,<sp/>½,<sp/><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/><sp/><sp/>¡,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>∩,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>¼<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>&gt;,<sp/>»,<sp/><sp/><sp/><sp/><sp/>&lt;,<sp/>[backspace],<sp/><sp/><sp/>[₧],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>~,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>«<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap2[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{GRAVE_ACCENT,<sp/>PERCENT_SIGN,<sp/>NULL,<sp/>FEMININE_ORDINAL_INDICATOR,<sp/>NULL,<sp/>NULL,<sp/>NO_BREAK_SPACE},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{AMPERSAND,<sp/>MASCULINE_ORDINAL_INDICATOR,<sp/>REVERSED_NOT_SIGN,<sp/>EQUALS_SIGN,<sp/>INFINITY,<sp/>MICRO_SIGN,<sp/>NULL},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{POUND_SIGN,<sp/>REVERSE_SOLIDUS,<sp/>LEFT_CURLY_BRACKET,<sp/>NULL,<sp/>INVERTED_QUESTION_MARK,<sp/>SUPERSCRIPT_TWO,<sp/>NOT_SIGN},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{CIRCUMFLEX_ACCENT,<sp/>VULGAR_FRACTION_ONE_HALF,<sp/>RIGHT_CURLY_BRACKET,<sp/>NULL,<sp/>INVERTED_EXCLAMATION_MARK,<sp/>INTERSECTION,<sp/>VULGAR_FRACTION_ONE_QUARTER},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{GREATER_THAN_SIGN,<sp/>RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK,<sp/>LESS_THAN_SIGN,<sp/>NULL,<sp/>PESETA_SIGN,<sp/>TILDE,<sp/>LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>3<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>⌠,<sp/><sp/><sp/><sp/>⌡,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>≈,<sp/><sp/>[alt],<sp/>[space],<sp/><sp/><sp/>[NULL]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>÷,<sp/><sp/><sp/><sp/>°,<sp/><sp/><sp/><sp/><sp/>∙,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>≡,<sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/>NULL,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>¥,<sp/><sp/><sp/><sp/>√,<sp/><sp/><sp/><sp/><sp/>[,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ⁿ,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>·<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>±,<sp/><sp/><sp/><sp/>\,<sp/><sp/><sp/><sp/><sp/>],<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ƒ<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>≥,<sp/>NULL,<sp/><sp/><sp/><sp/><sp/>≤,<sp/>[backspace],<sp/>[NULL],<sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/>NULL<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap3[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{TOP_HALF_INTEGRAL,<sp/>BOTTOM_HALF_INTEGRAL,<sp/>NULL,<sp/>ALMOST_EQUAL_TO,<sp/>NULL,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{DIVISION_SIGN,<sp/>DEGREE_SIGN,<sp/>BULLET_OPERATOR,<sp/>IDENTICAL_TO,<sp/>NULL,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{YEN_SIGN,<sp/>SQUARE_ROOT,<sp/>LEFT_SQUARE_BRACKET,<sp/>NULL,<sp/>NULL,<sp/>SUPERSCRIPT_LATIN_SMALL_LETTER_N,<sp/>MIDDLE_DOT},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{PLUS_MINUS_SIGN,<sp/>REVERSE_SOLIDUS,<sp/>RIGHT_SQUARE_BRACKET,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>LATIN_SMALL_LETTER_F_WITH_HOOK},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{GREATER_THAN_OR_EQUAL_TO,<sp/>NULL,<sp/>LESS_THAN_OR_EQUAL_TO,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>4<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>â,<sp/>ä,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ç,<sp/><sp/>[alt],<sp/>[space],<sp/><sp/><sp/>[NULL]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>à,<sp/>ß,<sp/><sp/><sp/><sp/><sp/>é,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ç,<sp/><sp/><sp/><sp/><sp/><sp/>í,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ì,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>å,<sp/>ë,<sp/><sp/><sp/><sp/><sp/>á,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/><sp/><sp/><sp/>Ñ,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ñ,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ê<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>Å,<sp/>è,<sp/><sp/><sp/><sp/><sp/>Ä,<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/><sp/><sp/><sp/>ô,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ö,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>É<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>Æ,<sp/>î,<sp/><sp/><sp/><sp/><sp/>æ,<sp/>[backspace],<sp/>[NULL],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ò,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ï<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap4[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_A_WITH_CIRCUMFLEX,<sp/>LATIN_SMALL_LETTER_A_WITH_DIAERESIS,<sp/>NULL,<sp/>LATIN_CAPITAL_LETTER_C_WITH_CEDILLA,<sp/>NULL,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_A_WITH_GRAVE,<sp/>LATIN_SMALL_LETTER_SHARP_S,<sp/>LATIN_SMALL_LETTER_E_WITH_ACUTE,<sp/>LATIN_SMALL_LETTER_C_WITH_CEDILLA,<sp/>LATIN_SMALL_LETTER_I_WITH_ACUTE,<sp/>LATIN_SMALL_LETTER_I_WITH_GRAVE,<sp/>NULL},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_A_WITH_RING_ABOVE,<sp/>LATIN_SMALL_LETTER_E_WITH_DIAERESIS,<sp/>LATIN_SMALL_LETTER_A_WITH_ACUTE,<sp/>NULL,<sp/>LATIN_CAPITAL_LETTER_N_WITH_TILDE,<sp/>LATIN_SMALL_LETTER_N_WITH_TILDE,<sp/>LATIN_SMALL_LETTER_E_WITH_CIRCUMFLEX},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_CAPITAL_LETTER_A_WITH_RING_ABOVE,<sp/>LATIN_SMALL_LETTER_E_WITH_GRAVE,<sp/>LATIN_CAPITAL_LETTER_A_WITH_DIAERESIS,<sp/>NULL,<sp/>LATIN_SMALL_LETTER_O_WITH_CIRCUMFLEX,<sp/>LATIN_SMALL_LETTER_O_WITH_DIAERESIS,<sp/>LATIN_CAPITAL_LETTER_E_WITH_ACUTE},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_CAPITAL_LIGATURE_AE,<sp/>LATIN_SMALL_LETTER_I_WITH_CIRCUMFLEX,<sp/>LATIN_SMALL_LIGATURE_AE,<sp/>NULL,<sp/>NULL,<sp/>LATIN_SMALL_LETTER_O_WITH_GRAVE,<sp/>LATIN_SMALL_LETTER_I_WITH_DIAERESIS}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>5<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>Ö,<sp/>ó,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>π,<sp/><sp/>[alt],<sp/>[space],<sp/><sp/><sp/>[NULL]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>ü,<sp/>Σ,<sp/><sp/><sp/><sp/><sp/>σ,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Γ,<sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ε,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>û,<sp/>Φ,<sp/><sp/><sp/><sp/><sp/>ù,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>τ<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>ú,<sp/>Θ,<sp/><sp/><sp/><sp/><sp/>Ü,<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ω<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>α,<sp/>φ,<sp/><sp/><sp/><sp/><sp/>ÿ,<sp/>[backspace],<sp/>[NULL],<sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>δ<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap5[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_CAPITAL_LETTER_O_WITH_DIAERESIS,<sp/>LATIN_SMALL_LETTER_O_WITH_ACUTE,<sp/>NULL,<sp/>GREEK_SMALL_LETTER_PI,<sp/>NULL,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_U_WITH_DIAERESIS,<sp/>GREEK_CAPITAL_LETTER_SIGMA,<sp/>GREEK_SMALL_LETTER_SIGMA,<sp/>GREEK_CAPITAL_LETTER_GAMMA,<sp/>NULL,<sp/>GREEK_SMALL_LETTER_EPSILON,<sp/>NULL},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_U_WITH_CIRCUMFLEX,<sp/>GREEK_CAPITAL_LETTER_PHI,<sp/>LATIN_SMALL_LETTER_U_WITH_GRAVE,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>GREEK_SMALL_LETTER_TAU},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{LATIN_SMALL_LETTER_U_WITH_ACUTE,<sp/>GREEK_CAPITAL_LETTER_THETA,<sp/>LATIN_CAPITAL_LETTER_U_WITH_DIAERESIS,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>GREEK_CAPITAL_LETTER_OMEGA},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{GREEK_SMALL_LETTER_ALPHA,<sp/>GREEK_SMALL_LETTER_PHI,<sp/>LATIN_SMALL_LETTER_Y_WITH_DIAERESIS,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>GREEK_SMALL_LETTER_DELTA}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>6<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>│,<sp/>┤,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>╜,<sp/>[alt],<sp/>[space],<sp/><sp/><sp/>[NULL]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╡,<sp/>╛,<sp/><sp/><sp/><sp/><sp/>┐,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>╝,<sp/><sp/><sp/><sp/><sp/>╟,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>╞,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╢,<sp/>┴,<sp/><sp/><sp/><sp/><sp/>╖,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/><sp/><sp/>╔,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>╚,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>└<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╣,<sp/>┬,<sp/><sp/><sp/><sp/><sp/>╕,<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/><sp/><sp/>╩,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>╦,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>├<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╗,<sp/>┼,<sp/><sp/><sp/><sp/><sp/>║,<sp/>[backspace],<sp/><sp/><sp/>[═],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>╠,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>─<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap6[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_LIGHT_VERTICAL,<sp/>BOX_DRAWINGS_LIGHT_VERTICAL_AND_LEFT,<sp/>NULL,<sp/>BOX_DRAWINGS_UP_SINGLE_AND_HORIZONTAL_DOUBLE,<sp/>NULL,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_VERTICAL_SINGLE_AND_LEFT_DOUBLE,<sp/>BOX_DRAWINGS_UP_SINGLE_AND_HORIZONTAL_DOUBLE,<sp/>BOX_DRAWINGS_LIGHT_DOWN_AND_LEFT,<sp/>BOX_DRAWINGS_DOUBLE_UP_AND_LEFT,<sp/>BOX_DRAWINGS_VERTICAL_DOUBLE_AND_RIGHT_SINGLE,<sp/>BOX_DRAWINGS_VERTICAL_SINGLE_AND_RIGHT_DOUBLE,<sp/>NULL},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_VERTICAL_DOUBLE_AND_LEFT_SINGLE,<sp/>BOX_DRAWINGS_LIGHT_UP_AND_HORIZONTAL,<sp/>BOX_DRAWINGS_DOWN_DOUBLE_AND_LEFT_SINGLE,<sp/>NULL,<sp/>BOX_DRAWINGS_DOUBLE_DOWN_AND_RIGHT,<sp/>BOX_DRAWINGS_DOUBLE_UP_AND_RIGHT,<sp/>BOX_DRAWINGS_LIGHT_UP_AND_RIGHT},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_DOUBLE_VERTICAL_AND_LEFT,<sp/>BOX_DRAWINGS_LIGHT_DOWN_AND_HORIZONTAL,<sp/>BOX_DRAWINGS_DOWN_SINGLE_AND_LEFT_DOUBLE,<sp/>NULL,<sp/>BOX_DRAWINGS_DOUBLE_UP_AND_HORIZONTAL,<sp/>BOX_DRAWINGS_DOUBLE_DOWN_AND_HORIZONTAL,<sp/>BOX_DRAWINGS_LIGHT_VERTICAL_AND_RIGHT},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_DOUBLE_DOWN_AND_LEFT,<sp/>BOX_DRAWINGS_LIGHT_VERTICAL_AND_HORIZONTAL,<sp/>BOX_DRAWINGS_DOUBLE_VERTICAL,<sp/>NULL,<sp/>BOX_DRAWINGS_DOUBLE_HORIZONTAL,<sp/>BOX_DRAWINGS_DOUBLE_VERTICAL_AND_HORIZONTAL,<sp/>BOX_DRAWINGS_LIGHT_HORIZONTAL}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>7<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╬,<sp/>╬,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>╪,<sp/>[alt],<sp/>[space],<sp/><sp/><sp/>[NULL]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╨,<sp/>┘,<sp/><sp/><sp/><sp/><sp/>┌,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>╫,<sp/><sp/><sp/><sp/><sp/>▒,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>░,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╤,<sp/>▄,<sp/><sp/><sp/><sp/><sp/>╥,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/>NUL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▓,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>█<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╘,<sp/>▌,<sp/><sp/><sp/><sp/><sp/>╙,<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/>SOH,<sp/><sp/><sp/><sp/><sp/>STX,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>╓,<sp/>■,<sp/><sp/><sp/><sp/><sp/>╒,<sp/>[backspace],<sp/>[EOT],<sp/><sp/><sp/><sp/><sp/>ETX,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap7[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_DOUBLE_VERTICAL_AND_HORIZONTAL,<sp/>BOX_DRAWINGS_DOUBLE_VERTICAL_AND_HORIZONTAL,<sp/>NULL,<sp/>BOX_DRAWINGS_VERTICAL_SINGLE_AND_HORIZONTAL_DOUBLE,<sp/>NULL,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_UP_DOUBLE_AND_HORIZONTAL_SINGLE,<sp/>BOX_DRAWINGS_LIGHT_UP_AND_LEFT,<sp/>BOX_DRAWINGS_LIGHT_DOWN_AND_RIGHT,<sp/>BOX_DRAWINGS_VERTICAL_DOUBLE_AND_HORIZONTAL_SINGLE,<sp/>LIGHT_SHADE,<sp/>MEDIUM_SHADE,<sp/>NULL},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_DOWN_SINGLE_AND_HORIZONTAL_DOUBLE,<sp/>LOWER_HALF_BLOCK,<sp/>BOX_DRAWINGS_DOWN_DOUBLE_AND_HORIZONTAL_SINGLE,<sp/>NUL_CHAR,<sp/>NULL,<sp/>DARK_SHADE,<sp/>FULL_BLOCK},</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_UP_SINGLE_AND_RIGHT_DOUBLE,<sp/>LEFT_HALF_BLOCK,<sp/>BOX_DRAWINGS_UP_DOUBLE_AND_RIGHT_SINGLE,<sp/>NULL,<sp/>START_OF_HEADING,<sp/>START_OF_TEXT,<sp/>RIGHT_HALF_BLOCK},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{BOX_DRAWINGS_DOWN_DOUBLE_AND_RIGHT_SINGLE,<sp/>BLACK_SQUARE,<sp/>BOX_DRAWINGS_DOWN_SINGLE_AND_RIGHT_DOUBLE,<sp/>NULL,<sp/>END_OF_TRANSMISSION,<sp/>END_OF_TEXT,<sp/>UPPER_HALF_BLOCK}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbol<sp/>8<sp/>column<sp/>in<sp/>functionality.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>ENQ,<sp/>ACK,<sp/>[sym],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SI,<sp/>[alt],<sp/>[space],<sp/><sp/><sp/>[NULL]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>BEL,<sp/>DLE,<sp/><sp/><sp/>DC1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SO,<sp/><sp/><sp/><sp/>EM,<sp/><sp/><sp/><sp/><sp/>CAN,<sp/>[lshift]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/><sp/>BS,<sp/>DC3,<sp/><sp/><sp/>TAB,<sp/><sp/><sp/><sp/>[rshift],<sp/><sp/><sp/>ESC,<sp/><sp/><sp/><sp/><sp/>SUB,<sp/><sp/><sp/><sp/><sp/><sp/>DC2<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/><sp/>VT,<sp/>DC4,<sp/><sp/><sp/><sp/>LF,<sp/><sp/><sp/><sp/><sp/>[enter],<sp/><sp/><sp/><sp/>FS,<sp/><sp/><sp/><sp/><sp/><sp/>GS,<sp/><sp/><sp/><sp/><sp/><sp/>NAK<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/><sp/>CR,<sp/>ETB,<sp/><sp/><sp/><sp/>FF,<sp/>[backspace],<sp/><sp/>[US],<sp/><sp/><sp/><sp/><sp/><sp/>RS,<sp/><sp/><sp/><sp/><sp/><sp/>SYN<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolKeymap8[ROW_COUNT][COL_COUNT]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{ENQUIRY,<sp/>ACKNOWLEDGE,<sp/>NULL,<sp/>SHIFT_IN,<sp/>NULL,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{BELL,<sp/>DATA_LINK_ESCAPE,<sp/>DEVICE_CONTROL_ONE,<sp/>SHIFT_OUT,<sp/>END_OF_MEDIUM,<sp/>CANCEL,<sp/>NULL},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{BACKSPACE,<sp/>DEVICE_CONTROL_THREE,<sp/>HORIZONTAL_TABULATION,<sp/>NULL,<sp/>ESCAPE,<sp/>SUBSTITUTE,<sp/>DEVICE_CONTROL_TWO},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{VERTICAL_TABULATION,<sp/>DEVICE_CONTROL_FOUR,<sp/>LINE_FEED,<sp/>NULL,<sp/>FILE_SEPARATOR,<sp/>GROUP_SEPARATOR,<sp/>NEGATIVE_ACKNOWLEDGE},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{CARRIAGE_RETURN,<sp/>END_OF_TRANSMISSION_BLOCK,<sp/>FORM_FEED,<sp/>NULL,<sp/>UNIT_SEPARATOR,<sp/>RECORD_SEPARATOR,<sp/>SYNCHRONOUS_IDLE}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>altLock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ctrlLock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>capsLock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>symbolLock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backlightState<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendDataFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">uint8_t<sp/>keymapIndex<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defaultKeymap<sp/>=<sp/>0,<sp/>symbolKeymap1<sp/>=<sp/>1,<sp/>symbol_keymap2<sp/>=<sp/>2,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">uint8_t<sp/>keyInfo[KEY_INFO_SIZE]<sp/>=<sp/>{0x00,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key_value,<sp/>alt,<sp/>ctrl,<sp/>shift,<sp/>sym,<sp/>mic,<sp/>speaker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">uint8_t<sp/>sendData[KEY_INFO_SIZE]<sp/>=<sp/>{0x00,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key_value,<sp/>alt,<sp/>ctrl,<sp/>shift,<sp/>sym,<sp/>mic,<sp/>speaker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">uint8_t<sp/>emptyData[KEY_INFO_SIZE]<sp/>=<sp/>{0x00,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">};<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>array<sp/>to<sp/>send<sp/>when<sp/>no<sp/>key<sp/>is<sp/>pressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">uint8_t<sp/>currentBrightness<sp/>=<sp/>119;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>brightness<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>keyRepeatStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1ac6532b6359ec1083f0936a3a1c93bdce" kindref="member">onRequest</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendDataFlag)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(sendData,<sp/>KEY_INFO_SIZE);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendDataFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;sendData<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>KEY_INFO_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(sendData[i]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(emptyData,<sp/>KEY_INFO_SIZE);<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>temporary<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a82ceff7c692732aa22e2944ae4a9216c" kindref="member">setKeyboardBrightness</ref>(uint8_t<sp/>command)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>FUNCTION_TOGGLE)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backlightState)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBrightness<sp/>=<sp/>KEYBOARD_BRIGHTNESS_MIN;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBrightness<sp/>=<sp/>KEYBOARD_BRIGHTNESS_DEFAULT;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>FUNCTION_UP)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBrightness<sp/>&lt;<sp/>KEYBOARD_BRIGHTNESS_MAX)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBrightness<sp/>&gt;=<sp/>KEYBOARD_BRIGHTNESS_MAX<sp/>-<sp/>KEYBOARD_BRIGHTNESS_STEP)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBrightness<sp/>=<sp/>KEYBOARD_BRIGHTNESS_MAX;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBrightness<sp/>+=<sp/>KEYBOARD_BRIGHTNESS_STEP;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>FUNCTION_DOWN)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBrightness<sp/>&gt;<sp/>KEYBOARD_BRIGHTNESS_MIN)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBrightness<sp/>&lt;=<sp/>KEYBOARD_BRIGHTNESS_MIN<sp/>+<sp/>KEYBOARD_BRIGHTNESS_STEP)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBrightness<sp/>=<sp/>KEYBOARD_BRIGHTNESS_MIN;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBrightness<sp/>-=<sp/>KEYBOARD_BRIGHTNESS_STEP;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>toggle<sp/>is<sp/>on/off<sp/>and<sp/>the<sp/>user<sp/>increments/decrements<sp/>the<sp/>brightness<sp/>then<sp/>ensure<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>backlight<sp/>state<sp/>is<sp/>set<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBrightness<sp/>&gt;<sp/>KEYBOARD_BRIGHTNESS_MIN)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backlightState<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backlightState<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ledcWrite(KEYBOARD_BRIGHTNESS_CH,<sp/>currentBrightness);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1ae2b10ad8b6dbe01e8edca43084500831" kindref="member">keyReleased</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyStates[rowIndex][colIndex]<sp/>==<sp/>RELEASED;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyStates[rowIndex][colIndex]<sp/>==<sp/>HELD;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyStates[rowIndex][colIndex]<sp/>==<sp/>PRESSED;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1af600fe8ddb2bcbd96d274431dc7169bc" kindref="member">keyNotPressed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyStates[rowIndex][colIndex]<sp/>==<sp/>NOT_PRESSED;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>keymap[ROW_COUNT][COL_COUNT])</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keymap[rowIndex][colIndex]<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1af260c2546cadcab2563494c1c0e06d32" kindref="member">printKeyInfo</ref>(uint8_t<sp/>data[KEY_INFO_SIZE])</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>all<sp/>the<sp/>keyInfo<sp/>array<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;char:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(data[0]);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;alt:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(data[1]);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;ctrl:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(data[2]);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;shift:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(data[3]);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;sym:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(data[4]);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;mic:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(data[5]);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;speaker:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(data[6]);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;************************************&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbolLock<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymapIndex<sp/>=<sp/>MIN_KEYMAP_INDEX;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a50804879e835f6e82e0f290a1f879ded" kindref="member">setDefaultCharacter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modifiers,<sp/>alt,<sp/>ctrl,<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(altLock<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[1]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrlLock<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(2,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[2]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>is<sp/>not<sp/>applied<sp/>when<sp/>caps<sp/>lock<sp/>is<sp/>on<sp/>unlike<sp/>the<sp/>others,<sp/>this<sp/>is<sp/>intended<sp/>so<sp/>the<sp/>host<sp/>can<sp/>differentiate<sp/>between<sp/>the<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[3]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capsLock<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>defaultKeymap[rowIndex][colIndex]<sp/>-<sp/>32;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>defaultKeymap[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a993522780f497efb09529ca580b213fa" kindref="member">setSymbolCharacter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((keymapIndex<sp/>==<sp/>1<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>2))<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap1))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap1[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>2<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap2))<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap2[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>3<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap3))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap3[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>4<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap4))<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap4[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>5<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap5))<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap5[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>6<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap6))<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap6[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>7<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap7))<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap7[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>7<sp/>special<sp/>handling<sp/>for<sp/>NUL<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(2,<sp/>4)<sp/>||<sp/><ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(2,<sp/>4)))<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap7[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[4]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>symbol<sp/>flag<sp/>if<sp/>it<sp/>is<sp/>the<sp/>NUL<sp/>character<sp/>(not<sp/>NULL<sp/>from<sp/>an<sp/>empty<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>8<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>symbolKeymap8))<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>symbolKeymap8[rowIndex][colIndex];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a0221716177b6fa10517b97976960e5f4" kindref="member">autoResetKeymapIndex</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>symbol<sp/>flag<sp/>if<sp/>the<sp/>character<sp/>isnt<sp/>NULL<sp/>(special<sp/>handling<sp/>above<sp/>for<sp/>NUL<sp/>character)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyInfo[0]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[4]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a2be7a2b4a13911ecc5ccf8bc7f69ff63" kindref="member">handleCharacter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a-z<sp/>key,<sp/>alt,<sp/>ctrl,<sp/>shift,<sp/>alt<sp/>lock,<sp/>ctrl<sp/>lock,<sp/>caps<sp/>lock,<sp/>symbol<sp/>(held)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((keymapIndex<sp/>==<sp/>MIN_KEYMAP_INDEX<sp/>||<sp/>altLock<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4)<sp/>||<sp/>ctrlLock<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(2,<sp/>3)<sp/>||<sp/>capsLock<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6)<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>2))<sp/>&amp;&amp;<sp/><ref refid="keyboard_8cpp_1a8b5a1a094e1fa36d9daafd18f36a247c" kindref="member">doesKeyExistInKeymap</ref>(rowIndex,<sp/>colIndex,<sp/>defaultKeymap))<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a993522780f497efb09529ca580b213fa" kindref="member">setSymbolCharacter</ref>(rowIndex,<sp/>colIndex);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a50804879e835f6e82e0f290a1f879ded" kindref="member">setDefaultCharacter</ref>(rowIndex,<sp/>colIndex);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>&gt;<sp/>MIN_KEYMAP_INDEX)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a993522780f497efb09529ca580b213fa" kindref="member">setSymbolCharacter</ref>(rowIndex,<sp/>colIndex);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1a0e5199e98a5286602c42aea9fb99ee65" kindref="member">readKeyMatrix</ref>()</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>the<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex<sp/>=<sp/>0;<sp/>rowIndex<sp/>&lt;<sp/>ROW_COUNT;<sp/>rowIndex++)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>col:<sp/>set<sp/>to<sp/>output<sp/>to<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>curRow<sp/>=<sp/>rows[rowIndex];</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(curRow,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(curRow,<sp/>LOW);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row:<sp/>iterate<sp/>through<sp/>the<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex<sp/>=<sp/>0;<sp/>colIndex<sp/>&lt;<sp/>COL_COUNT;<sp/>colIndex++)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>curCol<sp/>=<sp/>cols[colIndex];</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(curCol,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(1);<sp/></highlight><highlight class="comment">//<sp/>arduino<sp/>is<sp/>not<sp/>fast<sp/>enough<sp/>to<sp/>switch<sp/>input/output<sp/>modes<sp/>so<sp/>wait<sp/>1<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>buttonPressed<sp/>=<sp/>(digitalRead(curCol)<sp/>==<sp/>LOW);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Debounce<sp/>logic<sp/>so<sp/>keys<sp/>don&apos;t<sp/>trigger<sp/>multiple<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buttonPressed<sp/>!=<sp/>lastValue[rowIndex][colIndex])<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(DEBOUNCE_DELAY);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>debounce<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonPressed<sp/>=<sp/>(digitalRead(curCol)<sp/>==<sp/>LOW);<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>button<sp/>state<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buttonPressed)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1af600fe8ddb2bcbd96d274431dc7169bc" kindref="member">keyNotPressed</ref>(rowIndex,<sp/>colIndex)<sp/>||<sp/><ref refid="keyboard_8cpp_1ae2b10ad8b6dbe01e8edca43084500831" kindref="member">keyReleased</ref>(rowIndex,<sp/>colIndex))<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyStates[rowIndex][colIndex]<sp/>=<sp/>PRESSED;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyStates[rowIndex][colIndex]<sp/>=<sp/>HELD;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(rowIndex,<sp/>colIndex)<sp/>||<sp/><ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(rowIndex,<sp/>colIndex))<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyStates[rowIndex][colIndex]<sp/>=<sp/>RELEASED;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyStates[rowIndex][colIndex]<sp/>=<sp/>NOT_PRESSED;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastValue[rowIndex][colIndex]<sp/>=<sp/>buttonPressed;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(curCol,<sp/>INPUT);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(curRow,<sp/>INPUT);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="keyboard_8cpp_1ad932a802466e392e983bf2c9ca796f00" kindref="member">sendKeyInfo</ref>()</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(keyInfo,<sp/>emptyData,<sp/>KEY_INFO_SIZE);<sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>keyInfo<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex<sp/>=<sp/>0;<sp/>rowIndex<sp/>&lt;<sp/>ROW_COUNT;<sp/>rowIndex++)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex<sp/>=<sp/>0;<sp/>colIndex<sp/>&lt;<sp/>COL_COUNT;<sp/>colIndex++)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>key<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(rowIndex,<sp/>colIndex))<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyRepeatStart<sp/>=<sp/>millis();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>keyRepeatStart<sp/>to<sp/>the<sp/>current<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(3,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backlight<sp/>down<sp/>(alt<sp/>+<sp/>enter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a82ceff7c692732aa22e2944ae4a9216c" kindref="member">setKeyboardBrightness</ref>(FUNCTION_DOWN);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tab<sp/>(lshift<sp/>+<sp/>enter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>HORIZONTAL_TABULATION;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cycle<sp/>symbol<sp/>backward<sp/>(sym<sp/>+<sp/>enter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>MIN_KEYMAP_INDEX)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymapIndex<sp/>=<sp/>MAX_KEYMAP_INDEX;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymapIndex--;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>CARRIAGE_RETURN;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(0,<sp/>5))<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alt<sp/>lock<sp/>(alt<sp/>+<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>altLock<sp/>=<sp/>!altLock;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ctrl<sp/>lock<sp/>(rshift<sp/>+<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(2,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlLock<sp/>=<sp/>!ctrlLock;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>caps<sp/>lock<sp/>(lshift<sp/>+<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capsLock<sp/>=<sp/>!capsLock;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>lock<sp/>(sym<sp/>+<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolLock<sp/>=<sp/>!symbolLock;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>&gt;<sp/>MIN_KEYMAP_INDEX<sp/>&amp;&amp;<sp/>symbolLock<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymapIndex<sp/>=<sp/>MIN_KEYMAP_INDEX;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>0x20;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(4,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backlight<sp/>up<sp/>(alt<sp/>+<sp/>backspace)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a82ceff7c692732aa22e2944ae4a9216c" kindref="member">setKeyboardBrightness</ref>(FUNCTION_UP);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>del<sp/>(lshift<sp/>+<sp/>backspace)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>0x7F;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cycle<sp/>symbol<sp/>forward<sp/>(sym<sp/>+<sp/>backspace)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymapIndex++;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>&gt;<sp/>MAX_KEYMAP_INDEX)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymapIndex<sp/>=<sp/>MIN_KEYMAP_INDEX;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolLock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>symbol<sp/>lock<sp/>when<sp/>all<sp/>symbol<sp/>keymaps<sp/>have<sp/>been<sp/>cycled<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>BACKSPACE;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mic/0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(0,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mic<sp/>toggle<sp/>(alt<sp/>+<sp/>mic)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>FUNCTION_TOGGLE;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[5]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mic<sp/>volume<sp/>down<sp/>(lshift<sp/>+<sp/>mic)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>FUNCTION_DOWN;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[5]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mic<sp/>volume<sp/>up<sp/>(rshift<sp/>+<sp/>mic)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(2,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>FUNCTION_UP;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[5]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>below<sp/>items<sp/>are<sp/>contained<sp/>within<sp/>the<sp/>keymaps<sp/>but<sp/>appear<sp/>here<sp/>as<sp/>well<sp/>due<sp/>to<sp/>key<sp/>combination<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>DIGIT_ZERO;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nbsp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>NO_BREAK_SPACE;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>$/speaker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(4,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>speaker<sp/>toggle<sp/>(alt<sp/>+<sp/>$)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>FUNCTION_TOGGLE;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[6]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>speaker<sp/>volume<sp/>down<sp/>(lshift<sp/>+<sp/>$)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(1,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>FUNCTION_DOWN;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[6]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>speaker<sp/>volume<sp/>up<sp/>(rshift<sp/>+<sp/>$)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(2,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>FUNCTION_UP;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[6]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>below<sp/>items<sp/>are<sp/>contained<sp/>within<sp/>the<sp/>keymaps<sp/>but<sp/>appear<sp/>here<sp/>as<sp/>well<sp/>due<sp/>to<sp/>key<sp/>combination<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>DOLLAR_SIGN;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>¢</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>CENT_SIGN;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>₧</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>PESETA_SIGN;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>═</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>BOX_DRAWINGS_DOUBLE_HORIZONTAL;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>END_OF_TRANSMISSION;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>US</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymapIndex<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyInfo[0]<sp/>=<sp/>UNIT_SEPARATOR;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rshift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1ac2133ef5128cc60225f297e8ea3951ab" kindref="member">keyPressed</ref>(2,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backlight<sp/>toggle<sp/>(alt<sp/>+<sp/>rshift)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(0,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a82ceff7c692732aa22e2944ae4a9216c" kindref="member">setKeyboardBrightness</ref>(FUNCTION_TOGGLE);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a-z<sp/>key,<sp/>alt,<sp/>ctrl,<sp/>shift,<sp/>alt<sp/>lock,<sp/>ctrl<sp/>lock,<sp/>caps<sp/>lock,<sp/>symbol<sp/>(held)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a2be7a2b4a13911ecc5ccf8bc7f69ff63" kindref="member">handleCharacter</ref>(rowIndex,<sp/>colIndex);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a-z<sp/>key<sp/>(held),<sp/>alt,<sp/>ctrl,<sp/>shift,<sp/>alt<sp/>lock,<sp/>ctrl<sp/>lock,<sp/>caps<sp/>lock,<sp/>symbol<sp/>(held)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="keyboard_8cpp_1a55cbfc1fe73f32e46682154322754784" kindref="member">keyHeld</ref>(rowIndex,<sp/>colIndex)<sp/>&amp;&amp;<sp/>(millis()<sp/>-<sp/>keyRepeatStart<sp/>&gt;<sp/>KEY_REPEAT_DELAY))<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1a2be7a2b4a13911ecc5ccf8bc7f69ff63" kindref="member">handleCharacter</ref>(rowIndex,<sp/>colIndex);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>keyInfo<sp/>array<sp/>is<sp/>not<sp/>empty,<sp/>print<sp/>the<sp/>data<sp/>over<sp/>serial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyInfo[0]<sp/>!=<sp/>0x00<sp/>||<sp/>keyInfo[1]<sp/>!=<sp/>0x00<sp/>||<sp/>keyInfo[2]<sp/>!=<sp/>0x00<sp/>||<sp/>keyInfo[3]<sp/>!=<sp/>0x00<sp/>||<sp/>keyInfo[4]<sp/>!=<sp/>0x00<sp/>||<sp/>keyInfo[5]<sp/>!=<sp/>0x00<sp/>||<sp/>keyInfo[6]<sp/>!=<sp/>0x00)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard_8cpp_1af260c2546cadcab2563494c1c0e06d32" kindref="member">printKeyInfo</ref>(keyInfo);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendDataFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>sendDataFlag<sp/>is<sp/>true<sp/>then<sp/>copy<sp/>the<sp/>keyInfo<sp/>array<sp/>to<sp/>the<sp/>sendData<sp/>array<sp/>which<sp/>gets<sp/>sent<sp/>by<sp/>the<sp/>onRequest<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendDataFlag)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(sendData,<sp/>keyInfo,<sp/>KEY_INFO_SIZE);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="keyboard/keyboard.cpp"/>
  </compounddef>
</doxygen>
